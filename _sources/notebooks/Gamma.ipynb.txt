{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "016201f1",
   "metadata": {
    "papermill": {
     "duration": 0.003391,
     "end_time": "2023-11-01T22:37:08.024442",
     "exception": false,
     "start_time": "2023-11-01T22:37:08.021051",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Gamma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b0d00f23",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-01T22:37:08.031473Z",
     "iopub.status.busy": "2023-11-01T22:37:08.031065Z",
     "iopub.status.idle": "2023-11-01T22:37:11.089250Z",
     "shell.execute_reply": "2023-11-01T22:37:11.087084Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 3.067478,
     "end_time": "2023-11-01T22:37:11.094637",
     "exception": false,
     "start_time": "2023-11-01T22:37:08.027159",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "46e8275a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-01T22:37:11.104540Z",
     "iopub.status.busy": "2023-11-01T22:37:11.103806Z",
     "iopub.status.idle": "2023-11-01T22:37:11.111361Z",
     "shell.execute_reply": "2023-11-01T22:37:11.109634Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.01857,
     "end_time": "2023-11-01T22:37:11.116286",
     "exception": false,
     "start_time": "2023-11-01T22:37:11.097716",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "positive_prior = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5514119a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-01T22:37:11.124153Z",
     "iopub.status.busy": "2023-11-01T22:37:11.123044Z",
     "iopub.status.idle": "2023-11-01T22:37:11.130436Z",
     "shell.execute_reply": "2023-11-01T22:37:11.128739Z"
    },
    "papermill": {
     "duration": 0.017003,
     "end_time": "2023-11-01T22:37:11.135956",
     "exception": false,
     "start_time": "2023-11-01T22:37:11.118953",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"Gamma\"\n",
    "positive_prior = True\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6e958489",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-01T22:37:11.146991Z",
     "iopub.status.busy": "2023-11-01T22:37:11.146631Z",
     "iopub.status.idle": "2023-11-01T22:37:11.154887Z",
     "shell.execute_reply": "2023-11-01T22:37:11.152783Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.019254,
     "end_time": "2023-11-01T22:37:11.159647",
     "exception": false,
     "start_time": "2023-11-01T22:37:11.140393",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if not positive_prior:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "else:\n",
    "    \n",
    "    energy_grid = np.linspace(0,1,1000)\n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e69c4d4",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.002962,
     "end_time": "2023-11-01T22:37:11.166633",
     "exception": false,
     "start_time": "2023-11-01T22:37:11.163671",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "33de1728",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-01T22:37:11.174411Z",
     "iopub.status.busy": "2023-11-01T22:37:11.173693Z",
     "iopub.status.idle": "2023-11-01T22:37:11.187044Z",
     "shell.execute_reply": "2023-11-01T22:37:11.184778Z"
    },
    "papermill": {
     "duration": 0.022898,
     "end_time": "2023-11-01T22:37:11.192239",
     "exception": false,
     "start_time": "2023-11-01T22:37:11.169341",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: A gamma distribution function</li>\n",
       "\n",
       "<li>formula: $ f(x, \\alpha, \\beta)=\\frac{\\beta^\\alpha x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}$</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>alpha: \n",
       "<ul>\n",
       "\n",
       "<li>value: 0.5</li>\n",
       "\n",
       "<li>desc: first shape parameter</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.05</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>beta: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: second shape parameter</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: A gamma distribution function\n",
       "  * formula: $ f(x, \\alpha, \\beta)=\\frac{\\beta^\\alpha x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}$\n",
       "  * parameters:\n",
       "    * alpha:\n",
       "      * value: 0.5\n",
       "      * desc: first shape parameter\n",
       "      * min_value: 0.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.05\n",
       "      * free: true\n",
       "    * beta:\n",
       "      * value: 1.0\n",
       "      * desc: second shape parameter\n",
       "      * min_value: 0.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48306b21",
   "metadata": {
    "papermill": {
     "duration": 0.003304,
     "end_time": "2023-11-01T22:37:11.198517",
     "exception": false,
     "start_time": "2023-11-01T22:37:11.195213",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "6080cda7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-01T22:37:11.207892Z",
     "iopub.status.busy": "2023-11-01T22:37:11.207239Z",
     "iopub.status.idle": "2023-11-01T22:37:11.462501Z",
     "shell.execute_reply": "2023-11-01T22:37:11.461098Z"
    },
    "papermill": {
     "duration": 0.266161,
     "end_time": "2023-11-01T22:37:11.467732",
     "exception": false,
     "start_time": "2023-11-01T22:37:11.201571",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'probability')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue, lw=3)\n",
    "\n",
    "ax.set_xlabel(\"x\")\n",
    "ax.set_ylabel(\"probability\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc85fc82",
   "metadata": {
    "papermill": {
     "duration": 0.005471,
     "end_time": "2023-11-01T22:37:11.478396",
     "exception": false,
     "start_time": "2023-11-01T22:37:11.472925",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Random Number Generation\n",
    "\n",
    "This is how we can generate random numbers from the prior.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ff36a566",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-01T22:37:11.491891Z",
     "iopub.status.busy": "2023-11-01T22:37:11.491219Z",
     "iopub.status.idle": "2023-11-01T22:37:12.692849Z",
     "shell.execute_reply": "2023-11-01T22:37:12.691342Z"
    },
    "papermill": {
     "duration": 1.21427,
     "end_time": "2023-11-01T22:37:12.697600",
     "exception": false,
     "start_time": "2023-11-01T22:37:11.483330",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'N')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "u = np.random.uniform(0,1, size=5000)\n",
    "\n",
    "draws = [func.from_unit_cube(x) for x in u]\n",
    "\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.hist(draws, color=green, bins=50)\n",
    "\n",
    "ax.set_xlabel(\"value\")\n",
    "ax.set_ylabel(\"N\")\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.18"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6.553109,
   "end_time": "2023-11-01T22:37:13.541290",
   "environment_variables": {},
   "exception": null,
   "input_path": "Gamma.ipynb",
   "output_path": "/Users/runner/work/astromodels/astromodels/docs/notebooks/Gamma.ipynb",
   "parameters": {
    "func_name": "Gamma",
    "positive_prior": true
   },
   "start_time": "2023-11-01T22:37:06.988181",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}