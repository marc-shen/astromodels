{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "27f5865a",
   "metadata": {
    "papermill": {
     "duration": 0.006969,
     "end_time": "2024-08-13T20:16:58.831182",
     "exception": false,
     "start_time": "2024-08-13T20:16:58.824213",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Gamma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "59aae109",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-13T20:16:58.846184Z",
     "iopub.status.busy": "2024-08-13T20:16:58.845608Z",
     "iopub.status.idle": "2024-08-13T20:17:00.682092Z",
     "shell.execute_reply": "2024-08-13T20:17:00.681252Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 1.846043,
     "end_time": "2024-08-13T20:17:00.684468",
     "exception": false,
     "start_time": "2024-08-13T20:16:58.838425",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "aa55966c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-13T20:17:00.688828Z",
     "iopub.status.busy": "2024-08-13T20:17:00.688352Z",
     "iopub.status.idle": "2024-08-13T20:17:00.692115Z",
     "shell.execute_reply": "2024-08-13T20:17:00.691063Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.008017,
     "end_time": "2024-08-13T20:17:00.694054",
     "exception": false,
     "start_time": "2024-08-13T20:17:00.686037",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "positive_prior = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c1763c12",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-13T20:17:00.698693Z",
     "iopub.status.busy": "2024-08-13T20:17:00.698377Z",
     "iopub.status.idle": "2024-08-13T20:17:00.702074Z",
     "shell.execute_reply": "2024-08-13T20:17:00.701141Z"
    },
    "papermill": {
     "duration": 0.008522,
     "end_time": "2024-08-13T20:17:00.704038",
     "exception": false,
     "start_time": "2024-08-13T20:17:00.695516",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"Gamma\"\n",
    "positive_prior = True\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "13bf3bb0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-13T20:17:00.707863Z",
     "iopub.status.busy": "2024-08-13T20:17:00.707587Z",
     "iopub.status.idle": "2024-08-13T20:17:00.718265Z",
     "shell.execute_reply": "2024-08-13T20:17:00.717481Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.015062,
     "end_time": "2024-08-13T20:17:00.720527",
     "exception": false,
     "start_time": "2024-08-13T20:17:00.705465",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if not positive_prior:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "else:\n",
    "    \n",
    "    energy_grid = np.linspace(0,1,1000)\n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47f0c780",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.00136,
     "end_time": "2024-08-13T20:17:00.723367",
     "exception": false,
     "start_time": "2024-08-13T20:17:00.722007",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8d9fe092",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-13T20:17:00.727528Z",
     "iopub.status.busy": "2024-08-13T20:17:00.726987Z",
     "iopub.status.idle": "2024-08-13T20:17:00.733302Z",
     "shell.execute_reply": "2024-08-13T20:17:00.732459Z"
    },
    "papermill": {
     "duration": 0.011228,
     "end_time": "2024-08-13T20:17:00.735806",
     "exception": false,
     "start_time": "2024-08-13T20:17:00.724578",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: A gamma distribution function</li>\n",
       "\n",
       "<li>formula: $ f(x, \\alpha, \\beta)=\\frac{\\beta^\\alpha x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}$</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>alpha: \n",
       "<ul>\n",
       "\n",
       "<li>value: 0.5</li>\n",
       "\n",
       "<li>desc: first shape parameter</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.05</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>beta: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: second shape parameter</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: A gamma distribution function\n",
       "  * formula: $ f(x, \\alpha, \\beta)=\\frac{\\beta^\\alpha x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}$\n",
       "  * parameters:\n",
       "    * alpha:\n",
       "      * value: 0.5\n",
       "      * desc: first shape parameter\n",
       "      * min_value: 0.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.05\n",
       "      * free: true\n",
       "    * beta:\n",
       "      * value: 1.0\n",
       "      * desc: second shape parameter\n",
       "      * min_value: 0.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb5d1285",
   "metadata": {
    "papermill": {
     "duration": 0.001877,
     "end_time": "2024-08-13T20:17:00.739312",
     "exception": false,
     "start_time": "2024-08-13T20:17:00.737435",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e41e039e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-13T20:17:00.743558Z",
     "iopub.status.busy": "2024-08-13T20:17:00.743349Z",
     "iopub.status.idle": "2024-08-13T20:17:00.885783Z",
     "shell.execute_reply": "2024-08-13T20:17:00.884573Z"
    },
    "papermill": {
     "duration": 0.149915,
     "end_time": "2024-08-13T20:17:00.890864",
     "exception": false,
     "start_time": "2024-08-13T20:17:00.740949",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'probability')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue, lw=3)\n",
    "\n",
    "ax.set_xlabel(\"x\")\n",
    "ax.set_ylabel(\"probability\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92f2fb0b",
   "metadata": {
    "papermill": {
     "duration": 0.00219,
     "end_time": "2024-08-13T20:17:00.898123",
     "exception": false,
     "start_time": "2024-08-13T20:17:00.895933",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Random Number Generation\n",
    "\n",
    "This is how we can generate random numbers from the prior.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "56acc393",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-13T20:17:00.903198Z",
     "iopub.status.busy": "2024-08-13T20:17:00.902850Z",
     "iopub.status.idle": "2024-08-13T20:17:01.346777Z",
     "shell.execute_reply": "2024-08-13T20:17:01.344838Z"
    },
    "papermill": {
     "duration": 0.450297,
     "end_time": "2024-08-13T20:17:01.350096",
     "exception": false,
     "start_time": "2024-08-13T20:17:00.899799",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'N')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "u = np.random.uniform(0,1, size=5000)\n",
    "\n",
    "draws = [func.from_unit_cube(x) for x in u]\n",
    "\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.hist(draws, color=green, bins=50)\n",
    "\n",
    "ax.set_xlabel(\"value\")\n",
    "ax.set_ylabel(\"N\")\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 3.693185,
   "end_time": "2024-08-13T20:17:01.998005",
   "environment_variables": {},
   "exception": null,
   "input_path": "Gamma.ipynb",
   "output_path": "/Users/runner/work/astromodels/astromodels/docs/notebooks/Gamma.ipynb",
   "parameters": {
    "func_name": "Gamma",
    "positive_prior": true
   },
   "start_time": "2024-08-13T20:16:58.304820",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}