{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "0c0752b6",
   "metadata": {
    "papermill": {
     "duration": 0.005701,
     "end_time": "2025-04-29T00:16:52.376545",
     "exception": false,
     "start_time": "2025-04-29T00:16:52.370844",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Gamma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ab24414a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-29T00:16:52.387070Z",
     "iopub.status.busy": "2025-04-29T00:16:52.386471Z",
     "iopub.status.idle": "2025-04-29T00:16:54.591264Z",
     "shell.execute_reply": "2025-04-29T00:16:54.589460Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 2.219944,
     "end_time": "2025-04-29T00:16:54.600804",
     "exception": false,
     "start_time": "2025-04-29T00:16:52.380860",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "000ff6c5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-29T00:16:54.613914Z",
     "iopub.status.busy": "2025-04-29T00:16:54.613291Z",
     "iopub.status.idle": "2025-04-29T00:16:54.620885Z",
     "shell.execute_reply": "2025-04-29T00:16:54.620371Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.016456,
     "end_time": "2025-04-29T00:16:54.622930",
     "exception": false,
     "start_time": "2025-04-29T00:16:54.606474",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "positive_prior = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7a2cebba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-29T00:16:54.626590Z",
     "iopub.status.busy": "2025-04-29T00:16:54.626377Z",
     "iopub.status.idle": "2025-04-29T00:16:54.629091Z",
     "shell.execute_reply": "2025-04-29T00:16:54.628487Z"
    },
    "papermill": {
     "duration": 0.006475,
     "end_time": "2025-04-29T00:16:54.630829",
     "exception": false,
     "start_time": "2025-04-29T00:16:54.624354",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"Gamma\"\n",
    "positive_prior = True\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a9151f1c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-29T00:16:54.634278Z",
     "iopub.status.busy": "2025-04-29T00:16:54.634083Z",
     "iopub.status.idle": "2025-04-29T00:16:54.638610Z",
     "shell.execute_reply": "2025-04-29T00:16:54.637638Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.008083,
     "end_time": "2025-04-29T00:16:54.640227",
     "exception": false,
     "start_time": "2025-04-29T00:16:54.632144",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if not positive_prior:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "else:\n",
    "    \n",
    "    energy_grid = np.linspace(0,1,1000)\n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "70469c52",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.001245,
     "end_time": "2025-04-29T00:16:54.642892",
     "exception": false,
     "start_time": "2025-04-29T00:16:54.641647",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7ed79ac1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-29T00:16:54.646300Z",
     "iopub.status.busy": "2025-04-29T00:16:54.646088Z",
     "iopub.status.idle": "2025-04-29T00:16:54.652590Z",
     "shell.execute_reply": "2025-04-29T00:16:54.651535Z"
    },
    "papermill": {
     "duration": 0.010509,
     "end_time": "2025-04-29T00:16:54.654539",
     "exception": false,
     "start_time": "2025-04-29T00:16:54.644030",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: A gamma distribution function</li>\n",
       "\n",
       "<li>formula: $ f(x, \\alpha, \\beta)=\\frac{\\beta^\\alpha x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}$</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>alpha: \n",
       "<ul>\n",
       "\n",
       "<li>value: 0.5</li>\n",
       "\n",
       "<li>desc: first shape parameter</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.05</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>beta: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: second shape parameter</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: A gamma distribution function\n",
       "  * formula: $ f(x, \\alpha, \\beta)=\\frac{\\beta^\\alpha x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}$\n",
       "  * parameters:\n",
       "    * alpha:\n",
       "      * value: 0.5\n",
       "      * desc: first shape parameter\n",
       "      * min_value: 0.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.05\n",
       "      * free: true\n",
       "    * beta:\n",
       "      * value: 1.0\n",
       "      * desc: second shape parameter\n",
       "      * min_value: 0.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc47d20c",
   "metadata": {
    "papermill": {
     "duration": 0.001253,
     "end_time": "2025-04-29T00:16:54.657385",
     "exception": false,
     "start_time": "2025-04-29T00:16:54.656132",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "42b19fe0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-29T00:16:54.661144Z",
     "iopub.status.busy": "2025-04-29T00:16:54.660917Z",
     "iopub.status.idle": "2025-04-29T00:16:54.795450Z",
     "shell.execute_reply": "2025-04-29T00:16:54.791497Z"
    },
    "papermill": {
     "duration": 0.143979,
     "end_time": "2025-04-29T00:16:54.802719",
     "exception": false,
     "start_time": "2025-04-29T00:16:54.658740",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'probability')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue, lw=3)\n",
    "\n",
    "ax.set_xlabel(\"x\")\n",
    "ax.set_ylabel(\"probability\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7936de39",
   "metadata": {
    "papermill": {
     "duration": 0.001949,
     "end_time": "2025-04-29T00:16:54.809989",
     "exception": false,
     "start_time": "2025-04-29T00:16:54.808040",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Random Number Generation\n",
    "\n",
    "This is how we can generate random numbers from the prior.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7eff63ff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-29T00:16:54.820152Z",
     "iopub.status.busy": "2025-04-29T00:16:54.819763Z",
     "iopub.status.idle": "2025-04-29T00:16:55.275894Z",
     "shell.execute_reply": "2025-04-29T00:16:55.275201Z"
    },
    "papermill": {
     "duration": 0.460676,
     "end_time": "2025-04-29T00:16:55.277078",
     "exception": false,
     "start_time": "2025-04-29T00:16:54.816402",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'N')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "u = np.random.uniform(0,1, size=5000)\n",
    "\n",
    "draws = [func.from_unit_cube(x) for x in u]\n",
    "\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.hist(draws, color=green, bins=50)\n",
    "\n",
    "ax.set_xlabel(\"value\")\n",
    "ax.set_ylabel(\"N\")\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 4.481806,
   "end_time": "2025-04-29T00:16:55.955509",
   "environment_variables": {},
   "exception": null,
   "input_path": "Gamma.ipynb",
   "output_path": "/Users/runner/work/astromodels/astromodels/docs/notebooks/Gamma.ipynb",
   "parameters": {
    "func_name": "Gamma",
    "positive_prior": true
   },
   "start_time": "2025-04-29T00:16:51.473703",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}