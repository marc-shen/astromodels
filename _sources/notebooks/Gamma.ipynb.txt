{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "4b17002e",
   "metadata": {
    "papermill": {
     "duration": 0.0085,
     "end_time": "2024-05-08T19:22:57.680598",
     "exception": false,
     "start_time": "2024-05-08T19:22:57.672098",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Gamma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9acf5757",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T19:22:57.693590Z",
     "iopub.status.busy": "2024-05-08T19:22:57.692870Z",
     "iopub.status.idle": "2024-05-08T19:22:59.106281Z",
     "shell.execute_reply": "2024-05-08T19:22:59.105651Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 1.421726,
     "end_time": "2024-05-08T19:22:59.108121",
     "exception": false,
     "start_time": "2024-05-08T19:22:57.686395",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b7d3d09d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T19:22:59.111615Z",
     "iopub.status.busy": "2024-05-08T19:22:59.111231Z",
     "iopub.status.idle": "2024-05-08T19:22:59.119774Z",
     "shell.execute_reply": "2024-05-08T19:22:59.119302Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.011849,
     "end_time": "2024-05-08T19:22:59.121297",
     "exception": false,
     "start_time": "2024-05-08T19:22:59.109448",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "positive_prior = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3683dfd7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T19:22:59.124510Z",
     "iopub.status.busy": "2024-05-08T19:22:59.124311Z",
     "iopub.status.idle": "2024-05-08T19:22:59.126478Z",
     "shell.execute_reply": "2024-05-08T19:22:59.126046Z"
    },
    "papermill": {
     "duration": 0.005278,
     "end_time": "2024-05-08T19:22:59.127906",
     "exception": false,
     "start_time": "2024-05-08T19:22:59.122628",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"Gamma\"\n",
    "positive_prior = True\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6e8d14cf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T19:22:59.130960Z",
     "iopub.status.busy": "2024-05-08T19:22:59.130780Z",
     "iopub.status.idle": "2024-05-08T19:22:59.134600Z",
     "shell.execute_reply": "2024-05-08T19:22:59.133991Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.0071,
     "end_time": "2024-05-08T19:22:59.136182",
     "exception": false,
     "start_time": "2024-05-08T19:22:59.129082",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if not positive_prior:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "else:\n",
    "    \n",
    "    energy_grid = np.linspace(0,1,1000)\n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4e79894f",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.00122,
     "end_time": "2024-05-08T19:22:59.138680",
     "exception": false,
     "start_time": "2024-05-08T19:22:59.137460",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0a02b96d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T19:22:59.142065Z",
     "iopub.status.busy": "2024-05-08T19:22:59.141792Z",
     "iopub.status.idle": "2024-05-08T19:22:59.151103Z",
     "shell.execute_reply": "2024-05-08T19:22:59.150410Z"
    },
    "papermill": {
     "duration": 0.013196,
     "end_time": "2024-05-08T19:22:59.152962",
     "exception": false,
     "start_time": "2024-05-08T19:22:59.139766",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: A gamma distribution function</li>\n",
       "\n",
       "<li>formula: $ f(x, \\alpha, \\beta)=\\frac{\\beta^\\alpha x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}$</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>alpha: \n",
       "<ul>\n",
       "\n",
       "<li>value: 0.5</li>\n",
       "\n",
       "<li>desc: first shape parameter</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.05</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>beta: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: second shape parameter</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: A gamma distribution function\n",
       "  * formula: $ f(x, \\alpha, \\beta)=\\frac{\\beta^\\alpha x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}$\n",
       "  * parameters:\n",
       "    * alpha:\n",
       "      * value: 0.5\n",
       "      * desc: first shape parameter\n",
       "      * min_value: 0.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.05\n",
       "      * free: true\n",
       "    * beta:\n",
       "      * value: 1.0\n",
       "      * desc: second shape parameter\n",
       "      * min_value: 0.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fbd0e271",
   "metadata": {
    "papermill": {
     "duration": 0.00128,
     "end_time": "2024-05-08T19:22:59.155712",
     "exception": false,
     "start_time": "2024-05-08T19:22:59.154432",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c5b2f974",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T19:22:59.159307Z",
     "iopub.status.busy": "2024-05-08T19:22:59.159119Z",
     "iopub.status.idle": "2024-05-08T19:22:59.283549Z",
     "shell.execute_reply": "2024-05-08T19:22:59.282474Z"
    },
    "papermill": {
     "duration": 0.130302,
     "end_time": "2024-05-08T19:22:59.287390",
     "exception": false,
     "start_time": "2024-05-08T19:22:59.157088",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'probability')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue, lw=3)\n",
    "\n",
    "ax.set_xlabel(\"x\")\n",
    "ax.set_ylabel(\"probability\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b14d974",
   "metadata": {
    "papermill": {
     "duration": 0.002426,
     "end_time": "2024-05-08T19:22:59.292302",
     "exception": false,
     "start_time": "2024-05-08T19:22:59.289876",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Random Number Generation\n",
    "\n",
    "This is how we can generate random numbers from the prior.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "57e1552e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T19:22:59.296277Z",
     "iopub.status.busy": "2024-05-08T19:22:59.296091Z",
     "iopub.status.idle": "2024-05-08T19:22:59.683904Z",
     "shell.execute_reply": "2024-05-08T19:22:59.683380Z"
    },
    "papermill": {
     "duration": 0.391674,
     "end_time": "2024-05-08T19:22:59.685405",
     "exception": false,
     "start_time": "2024-05-08T19:22:59.293731",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'N')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "u = np.random.uniform(0,1, size=5000)\n",
    "\n",
    "draws = [func.from_unit_cube(x) for x in u]\n",
    "\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.hist(draws, color=green, bins=50)\n",
    "\n",
    "ax.set_xlabel(\"value\")\n",
    "ax.set_ylabel(\"N\")\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 2.900164,
   "end_time": "2024-05-08T19:23:00.014704",
   "environment_variables": {},
   "exception": null,
   "input_path": "Gamma.ipynb",
   "output_path": "/Users/runner/work/astromodels/astromodels/docs/notebooks/Gamma.ipynb",
   "parameters": {
    "func_name": "Gamma",
    "positive_prior": true
   },
   "start_time": "2024-05-08T19:22:57.114540",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}