{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f0dc845e",
   "metadata": {},
   "source": [
    "# Priors for Bayesian analysis\n",
    "\n",
    "Astromodels supports the definition of priors for all parameters in\n",
    "your model. You can use as prior any function (although of course not\n",
    "all functions should be used this way, but the choice is up to you).\n",
    "\n",
    "First let’s define a simple model containing one point source (see the\n",
    "“Model tutorial” for more info):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "eac9ff32",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T12:49:07.519685Z",
     "iopub.status.busy": "2022-09-27T12:49:07.519198Z",
     "iopub.status.idle": "2022-09-27T12:49:11.980026Z",
     "shell.execute_reply": "2022-09-27T12:49:11.978633Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "from astromodels import *\n",
    "\n",
    "# Create a point source named \"pts1\"\n",
    "pts1 = PointSource('pts1',ra=125.23, dec=17.98, spectral_shape=Powerlaw())\n",
    "\n",
    "# Create the model\n",
    "my_model = Model(pts1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4cad394",
   "metadata": {},
   "source": [
    "Now let’s assign uniform priors to the parameters of the powerlaw\n",
    "function. The function uniform_prior is defined like this:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1480e53a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T12:49:11.986521Z",
     "iopub.status.busy": "2022-09-27T12:49:11.986087Z",
     "iopub.status.idle": "2022-09-27T12:49:11.993713Z",
     "shell.execute_reply": "2022-09-27T12:49:11.992628Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: A function which is constant on the interval lower_bound - upper_bound and 0 outside the interval. The extremes of the interval are counted as part of the interval.</li>\n",
       "\n",
       "<li>formula: $ f(x)=\\begin{cases}0 & x < \\text{lower_bound} \\\\\\text{value} & \\text{lower_bound} \\le x \\le \\text{upper_bound} \\\\ 0 & x > \\text{upper_bound} \\end{cases}$</li>\n",
       "\n",
       "<li>default parameters: \n",
       "<ul>\n",
       "\n",
       "<li>lower_bound: \n",
       "<ul>\n",
       "\n",
       "<li>value: 0.0</li>\n",
       "\n",
       "<li>desc: Lower bound for the interval</li>\n",
       "\n",
       "<li>min_value: -inf</li>\n",
       "\n",
       "<li>max_value: inf</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>upper_bound: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: Upper bound for the interval</li>\n",
       "\n",
       "<li>min_value: -inf</li>\n",
       "\n",
       "<li>max_value: inf</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>value: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: Value in the interval</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Uniform_prior.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d70b712",
   "metadata": {},
   "source": [
    "We can use it as such:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1debb74d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T12:49:12.000207Z",
     "iopub.status.busy": "2022-09-27T12:49:11.999648Z",
     "iopub.status.idle": "2022-09-27T12:49:12.008970Z",
     "shell.execute_reply": "2022-09-27T12:49:12.007867Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "Parameter K = 1.0 [1 / (cm2 keV s)]\n",
       "(min_value = 1e-30, max_value = 1000.0, delta = 0.1, free = True) [prior: Uniform_prior]"
      ],
      "text/plain": [
       "Parameter K = 1.0 [1 / (cm2 keV s)]\n",
       "(min_value = 1e-30, max_value = 1000.0, delta = 0.1, free = True) [prior: Uniform_prior]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set 'lower_bound' to 0, 'upper bound' to 10, and leave the 'value' parameter\n",
    "# to the default value\n",
    "pts1.spectrum.main.Powerlaw.K.prior = Uniform_prior(lower_bound = 0, upper_bound=10)\n",
    "\n",
    "# Display it\n",
    "pts1.spectrum.main.Powerlaw.K.display()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0261c258",
   "metadata": {},
   "source": [
    "Now, lets's set a Gaussian prior on the spectral index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1a693339",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T12:49:12.014290Z",
     "iopub.status.busy": "2022-09-27T12:49:12.013868Z",
     "iopub.status.idle": "2022-09-27T12:49:12.023414Z",
     "shell.execute_reply": "2022-09-27T12:49:12.022387Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "Parameter index = -2.01 []\n",
       "(min_value = -10.0, max_value = 10.0, delta = 0.20099999999999998, free = True) [prior: Gaussian]"
      ],
      "text/plain": [
       "Parameter index = -2.01 []\n",
       "(min_value = -10.0, max_value = 10.0, delta = 0.20099999999999998, free = True) [prior: Gaussian]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "pts1.spectrum.main.Powerlaw.index.prior = Gaussian(mu=-2, sigma=1)\n",
    "\n",
    "pts1.spectrum.main.Powerlaw.index.display()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8a0e8c7c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T12:49:12.028800Z",
     "iopub.status.busy": "2022-09-27T12:49:12.028342Z",
     "iopub.status.idle": "2022-09-27T12:49:12.892896Z",
     "shell.execute_reply": "2022-09-27T12:49:12.891676Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Prior')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Let's get 500 points uniformly distributed between -20 and 20\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "random_points = np.random.uniform(-10,20,100)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(random_points,pts1.spectrum.main.Powerlaw.K.prior(random_points), '.' )\n",
    "\n",
    "ax.set_ylim([-0.1,1.2])\n",
    "ax.set_xlabel(\"value of K\")\n",
    "ax.set_ylabel(\"Prior\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "3e3d56a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T12:49:12.898767Z",
     "iopub.status.busy": "2022-09-27T12:49:12.898010Z",
     "iopub.status.idle": "2022-09-27T12:49:13.358328Z",
     "shell.execute_reply": "2022-09-27T12:49:13.332741Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Prior')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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4qc//Wl88IMfjMsvvzzWrl27x9f99a9/jW984xs9VCUAAEDvktNB8J577omjjz46rrrqqjj22GPjwgsvjJNOOil+8pOftPma0047LaZMmRLPPvtsD1YKAADQe+Rlu4A9WblyZUycOLHF2CmnnBL3339/m6+55ZZb4rXXXosf/ehHsXr16n2uYfz48W0emzt3bhQVFcXOnTv3OksJAADQHXbu3BkREXV1de1+TU4HwU2bNsURRxzRYmzw4MGxbdu2Nl9z9NFHR0TEYYcd1q21RUT0798/IiIaGxsjlUp1+/cDAABoS2NjY7vPzekgmEql4sADD2wxVlhY2KOha/ny5W0ee+qpp6K+vj7222+/VnX2tD//+c8RETF69Ois1pFUrn/2uPbZ5fpnj2ufPa59drn+2ePaZ9eern9dXV00NjY2T1S1R1aD4KuvvhovvfRSm8cPOuigqK2tbTFWV1cXRUVF3V1auxx//PHZLqHZJz/5yYjYc3Cl+7j+2ePaZ5frnz2uffa49tnl+mePa59dXX39sxoEKyoqYtasWW0eP+KII6KysrLF2IsvvhglJSXdXRoAAECfldUgePbZZ8fZZ5/d5vEFCxbE7373u7j88subx373u9/FO9/5zp4oDwAAoE/K6e0jzjnnnHjqqafilltuiaeffjq+8pWvxNNPPx3Tp0+PiIiGhobYsGFD1NTUZLlSAACA3iOng2BpaWnceuut8dBDD8X06dPjySefjNtvvz0OP/zwiIioqqqKyZMnx5IlS7JcKQAAQO+R011DIyImTJgQEyZMyHhs2LBhbW4cf8UVV8QVV1zRnaUBAAD0Sv3S6XQ620UAAADQc3J6aSgAAABdTxAEAABIGEEQAAAgYQRBAACAhBEEAQAAEkYQBAAASBhBEAAAIGEEQQAAgIQRBAEAABJGEAQAAEgYQRAAACBhBEEAAICEEQQBAAASRhDsA+rq6uKMM86IL33pS3s8b+3atXHuuedGWVlZTJ48Oe67774eqrDv+e///u94z3veE2VlZTF16tS4//77s11SYnT02r/wwgvxyU9+Mk488cR497vfHbfffnsPVdo3/eIXv4gzzzwzTjjhhJgwYUIsXLgwGhsbs11WInT02vvd7x5f/vKX9/p5S/do77X3907Xefzxx2PatGkxZsyYmDJlSvz2t7/Ndkl9Wn19fVx//fVRXl4eY8eOjdmzZ0cqlWrz/B/+8Ifxnve8J972trfFhRdeGOvWrevQ9xME+4CFCxfG3/72tz2eU1NTE5/4xCeitLQ0fvzjH8dll10W119/fSxdurSHquw7Hnjggbj55pvj4osvjp/85Cfx3ve+Nz772c/G6tWr23zNlVdeGaNHj27xz6xZs3qw6r6ho9e+sbExLrnkkthvv/3iBz/4QVx33XXx3e9+N+65554errxveOyxx2LGjBkxZcqU+NnPfhZXXXVV3HXXXXHXXXe1+Rq/+12jo9fe737X27VrVyxbtqzdoeKcc85p9bt/yy23dHOVfVNHrr2/d7rO5s2b49JLL40JEybET3/60/jgBz8Yl19+eaxdu7bN13jP3zfz5s2LFStWxMKFC+O2226LtWvXxpw5czKe+8ADD8RNN90UV155Zdx7770xePDg+MQnPhG1tbXt/n55XVU42bF69er4n//5nzjmmGP2eN4vfvGL2H///eNLX/pSHHDAATFq1KhYuXJl3HPPPTFx4sQeqrZv+PnPfx5nnnlmTJ8+PSIijjvuuPjf//3feOSRR+Kkk07K+Jrnnnsurr/++jjxxBObxw466KAeqbcv6ei1f/TRR2PDhg1x9913xyGHHBLHH398nHfeeXHPPffERz7ykZ4uv9f76U9/GuPHj49LLrkkIl6//uvWrYsf/ehHceGFF2Z8jd/9rtHRa+93v2u98MILcdppp0V9fX27zk+n0/Hcc8/FN7/5zSgpKWkef9Ob3tRdJfZZHb32/t7pOvfcc08cffTRcdVVV0VExLHHHhuPPPJI/OQnP4nPf/7zGV/jPb/ztm/fHosWLYpbb701xo0bFxERs2bNivPPPz+2bdsWhx56aIvz77jjjvjYxz4W06ZNi4iIL37xi3HqqafGb3/72zjttNPa9T3NCPZiO3fujFmzZsWcOXP2+uGycuXKGDduXBxwwAHNY+Xl5fH44493d5l9zsCBA6O8vLzFWF5eXpt3YHbt2hUbN26MCRMmxFFHHdX8T3FxcU+U26d09No//vjjMWbMmDjkkEOax8rLy+O5556Lbdu2dWepfVIqlYqxY8e2GBs0aFC89NJLGc/3u991Onrt/e53rcMOOyx+8pOfxOLFi+P444/f6/lVVVXR2NgY73jHO1r87g8aNKgHqu1bOnrt/b3TdVauXBkTJkxoMXbKKae0eS295++bptVNTSEwIqKsrCzy8vJi5cqVLc6tqamJp556qsV/n/z8/BgzZkyHftfNCPZiX/3qV+O4446L008/fa/LfTZt2hTvfe97W4wNHjw4amtro6amJgYOHNidpfYpX/va15r/d2NjYzz44IOxdu3a5jtmu9u8eXNERHzlK1+J3//+91FQUBBnnHFGXHbZZdG/f/8eqbmv6Oi137RpUxxxxBEtxgYPHhwREVu3bm11d409+/a3v93i32tra+PnP/95vPWtb814vt/9rtPRa+93v2v1798/3vKWt0RERGFh4V7PX7duXRx00EFxySWXxF/+8pcYNGhQnHPOOXH++efHfvu5B98RHb32/t7pOm29j7R1M8l7/r7ZuHFjFBcXt7hW/fv3j0GDBrW65ps3b47GxsYO/ffJRBDspVauXBn3339//OpXv2rX+alUKg488MAWYwUFBc3HvDF23MMPPxxXXHFF7Nq1KyZOnBgnn3xyxvOef/752LVrVxxzzDFxySWXxLPPPhs33nhjbNmyJebNm9fDVfcN7b32qVQq3vzmN7cYe+PvPZ3317/+NWbOnBnr1q1r8zk1v/vdoz3X3u9+dj3//POxffv2ePe73x3/+Z//GX/4wx/i5ptvjpqamrj88suzXV6f5u+drpPpWhYWFrb5HuI9f9+kUqnIz89vNV5QUNDqmjf9++7nFxQUCIJ9wauvvtrmkp/GxsaYNWtWfO5zn2v3MpODDjqo1fK5urq6iIg4+OCD963YPmZP1z4i4sgjj4x+/frFqaeeGj/72c/imWeeiRtvvLHNbmannHJKLF26tHlpxFve8pbIy8uLq6++OubMmeND6Q26+tr7ve+Y9lz/Xbt2xTe+8Y244447Yvjw4fGDH/wgRo8enfF8v/vt19XX3u9+x7T3vae9pk6dGmeccUbzZ/Rb3/rWqKmpie9973uC4G66+tr73W+/vV37tq5lUVFRxvO95++boqKijI+6ZLrmTf++c+fOFuP19fVt/vfJRBDMURUVFXvtsjRjxoyYMWNGRES89tpr8fvf/z4WLVoUK1asaPVgbnFxcVRWVrYYe/HFF2PQoEEZ7z4k2d6u/U033RQTJkyIQYMGxVve8pZ4y1veElu3bo0777wzYxgpLCxstZxl1KhRkU6n46WXXvLG+AZdfe2Li4vjr3/9a4uxF198Mfbff//mZXL8y96u/+9///u47LLL4o9//GN85jOfiQsvvHCPy3387rdfV197v/sds7frv3r16nYtS2yS6Q+xUaNGxT/+8Y+oq6trNcuSZF197f290357u/ZHHHFExmv5xgZIb+Q9f98UFxdHdXV11NfXN7+/NzQ0RHV1dQwdOrTFuYcddlhEvP7fY9iwYc3jL774YpuPDGQiCOaos88+O84+++yMx+rr62PTpk0txmbMmBGlpaVx6aWXZnzDnDBhQtx+++2xa9eu2H///SMi4ne/+128853v7Prie7k9XfuGhoZ429veFp/73OeaO1dGvP7fpK1nbj7/+c/H9u3bY+HChc1jf/rTn2LAgAGt1nYnXVdf+6aW16+++mrzzZHf/e53UVZW5gMpgz1d/4iIb33rW/GnP/0p7r777igrK9vr1/O7335dfe397nfM3q5/R33yk5+MY445pvlmbcTrv/vDhw8XAnfT1dfe3zvtt7drv2DBgvjd737XYhZ7T9fSe/6+KS8vj3Q6HU8++WS84x3viIiIVatWRTqdbtUs7JBDDokxY8bE8uXLm4/V1NTEmjVr4lOf+lS7v6cnlnuh/v37t+jGdNRRR8WAAQOiqKgojjrqqNhvv/2itrY2NmzY0DzFfMYZZ8TOnTvji1/8YjzzzDPxne98J37961/HBRdckOWfpnfJy8uLKVOmxC233BIPPPBAPPvss7Fo0aK444474sMf/nBEvB5YNmzYEDU1NRERMXHixFiyZEnccsst8fTTT8evf/3rWLBgQVx44YUtupqxZ5259u985ztjyJAhMXPmzHj66afjxz/+cXz3u9+Nj3/849n8UXqt+++/P6ZMmRKHHHJIbNiwocU/EX73u1NHr73f/Z61+2fuxIkT44c//GH84Ac/iGeeeSZ+/OMfxx133BEXXXRRlivte/y9033OOeeceOqpp5rfw7/yla/E008/3Xwz1nt+1yoqKoqpU6fG3LlzY9WqVbF06dKYPXt2TJ8+vfnZvxdeeKH5/I9+9KNx1113xf333x9/+MMf4oorrojS0tI49dRT2/9N0/QJH/vYx9Jf/OIXm//98ccfTx977LHpxx9/vHnsz3/+c/r/+//+v/QJJ5yQPu2009IVFRXZKLXXS6VS6blz56bf/e53p8vKytJnnXVW+t577003Njam0+l0etOmTeljjz02/bOf/az5NYsXL06feeaZ6RNOOCE9ceLE9Ne+9rX0a6+9lq0fodfqzLXfuHFj+oILLkiPHj06/Z73vCf94x//OFvl93plZWXpY489NuM/6bTf/e7UmWvvd7977P55m05n/sz9/ve/n37f+96XPv7449OTJk1Kf//73+/hSvue9l57f+90nWXLlqXPOuus9OjRo9Mf+MAH0qtWrWo+5j2/6+3YsSM9Z86c9EknnZQ+5ZRT0nPnzk3X19en0+l0esaMGen3vOc9Lc6/44470uPHj0+XlZWlP/WpT6Wrqqo69P36pdPpdDeEWgAAAHKUpaEAAAAJIwgCAAAkjCAIAACQMIIgAABAwgiCAAAACSMIAgAAJIwgCAAAkDCCIAAAQMIIggDQCStXrozjjjsuVqxYke1Smj322GNx+umnx/HHHx8vvPBCxnPOO++8OPfcc1uNv/zyyzFlypQ44YQT4oEHHujuUgHIsrxsFwAAdI3vfe978fLLL8fChQvj0EMPbffrXn755bjgggti3bp1sXDhwnjf+97XjVUCkAsEQQDoI2pra2PEiBExadKkdr/m5ZdfjgsvvDA2bNgQt956a0ycOLEbKwQgV1gaCkCifPzjH4+xY8fGa6+91mJ81qxZ8fa3vz3q6uoiIqKioiLOOeecOPHEE6O8vDz+/d//PZ588sk2v+7MmTPjXe96V4uxzZs3x3HHHReLFi1qHtu5c2fMnz8/3vWud8WYMWPiQx/6UDzyyCN7rXv9+vVx+eWXx9vf/vYoKyuLj33sY7Fy5crm48cdd1w88cQTsWbNmjjuuONi8+bNe/2aTSFw48aN8Z3vfEcIBEgQQRCARJkyZUps3749nnjiieax1157LR5++OE47bTT4sADD4w//vGP8ZnPfCaGDx8e8+bNi5kzZ8Yrr7wSn/jEJ+Lvf/97p7/3rl274uKLL46f//zn8fGPfzxuvvnmGD58eFx66aVx//33t/m6ysrK+PCHPxx/+9vf4qqrror58+fHwIED48ILL4ylS5dGRMTtt98exx57bBxzzDFx++23x5vf/OY91vLKK6/EhRdeGM8//3zcfvvtMW7cuE7/XAD0PpaGApAokyZNii984QtRUVER73znOyPi9SYr//jHP+L//b//FxERf/3rX+Okk06Km2++Ofr16xcREUOGDIkLL7wwnn322SgvL+/U937ggQdi5cqVce+998aJJ54YERGTJ0+OV155JRYuXBhnnHFGxtfdeuutUVdXFz/4wQ+an/077bTT4pxzzombb745Jk6cGO9617vi9ttvj4aGhlYzk7t79dVXm3+WiIitW7d26ucBoPcyIwhAogwcODD+7d/+LX7zm99EOp2OiIiHHnoohg4dGm9/+9sjIuJDH/pQ/PCHP4yampr4y1/+Eg899FD86Ec/iojXZ/U6a+nSpTF48OA49thjI5VKNf/zrne9KzZs2BDbtm3L+Lrly5fHxIkTWzSA6devX7zvfe+Lv/71r1FTU9OhOp577rmoqqqK7373u3HYYYfF9ddfHy+++GKnfy4Aeh8zggAkztSpU+P++++PP/7xjzF69Oj4zW9+E+eee27z7N+mTZviuuuui5UrV8agQYNixIgRcfjhh3f4+zQFzSZbt26NLVu2xEknnZTx/FdeeSVjt8+tW7dGSUlJq/GBAwdGREQqlWr+3+1x8MEHx5133hmjRo2KefPmxUUXXRTXXntt3HnnnbHffu4RAySBIAhA4owfPz7e9KY3RUVFRaRSqfj73//evCw0ImLGjBmxbdu2eOihh2L48OEREbFixYr41a9+1ebXbAqRb7T784QHHXRQ83OHmWQKexGvB76XX3651fgLL7wQBxxwQLzpTW9qs65MjjrqqBg1alREREyYMCE+8pGPxA9/+MO4/fbb4+KLL+7Q1wKgd3LbD4DEOeCAA+L000+P3/zmN/HQQw/FmDFjYuTIkc3Hn3nmmZgwYUJzCIyIvW4cX1BQEKlUqsUs4KpVq1qcc8opp8SWLVti+PDh8fa3v735n9WrV8ett94a+fn5Gb/2ySefHL/97W9bLAF97bXX4qGHHory8vLo379/h37+3V177bUxcuTI+MY3vhF//vOf9+lrAdA7CIIAJNKUKVNiw4YN8Ytf/CKmTZvW4tjo0aPjl7/8Zdx7773xwAMPxLXXXhsPPfRQRLzeWCbT7NzJJ58cNTU18a1vfSu2bNkS//u//xt33nlni3M++MEPxrBhw+LjH/94LFq0KB544IH43Oc+F1/72tfi3e9+d5vLMi+//PLYsWNHnHfeebFo0aJ48MEH47LLLovq6uq48sor9/la5Ofnx4IFCyKdTsfVV18dO3bs2OevCUBuEwQBSKSTTjopjjjiiGhsbIzTTz+9xbF58+bF6NGj48Ybb4yvfOUrMWjQoLjvvvvine98Z9x5552xadOmVl/v9NNPj0suuSR+8IMfxOTJk+O2226L+fPntzhnwIAB8YMf/CBOOOGEWLBgQcyYMSP+9Kc/xZe//OW44IIL2qz1rW99a9x5550xcODA+PKXvxyzZs2K2tra+P73vx9jxozpkusxevTouOyyy2L9+vVxww03dMnXBCB39Uvv/iQ7AAAAfZoZQQAAgIQRBAEAABJGEAQAAEgYQRAAACBhBEEAAICEEQQBAAASRhAEAABIGEEQAAAgYQRBAACAhBEEAQAAEkYQBAAASJj/H+HStIVTWq+7AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "random_points = np.random.uniform(-4,0,100)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(random_points,pts1.spectrum.main.Powerlaw.index.prior(random_points), 'r.' )\n",
    "\n",
    "ax.set_ylim([-0.1,0.6])\n",
    "ax.set_xlabel(\"value of K\")\n",
    "ax.set_ylabel(\"Prior\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "55bb7b59",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
